package wtf.demise.features.modules.impl.exploit;

import net.minecraft.network.play.client.C00PacketKeepAlive;
import wtf.demise.events.annotations.EventTarget;
import wtf.demise.events.impl.misc.WorldChangeEvent;
import wtf.demise.events.impl.packet.PacketEvent;
import wtf.demise.events.impl.player.UpdateEvent;
import wtf.demise.features.modules.Module;
import wtf.demise.features.modules.ModuleInfo;
import wtf.demise.features.values.impl.SliderValue;
import wtf.demise.utils.math.TimerUtils;
import wtf.demise.utils.packet.PacketUtils;
import wtf.demise.utils.packet.TimedPacket;

import java.util.concurrent.ConcurrentLinkedQueue;

// can't use LagUtils since im only delaying certain packets
@ModuleInfo(name = "PingSpoof", description = "Spoofs your ping.")
public class PingSpoof extends Module {
    private final SliderValue ms = new SliderValue("Ms", 100, 10, 1000, 1, this);

    private final ConcurrentLinkedQueue<TimedPacket> packets = new ConcurrentLinkedQueue<>();
    private final TimerUtils timer = new TimerUtils();

    @EventTarget
    public void onWorldChange(WorldChangeEvent e) {
        packets.forEach(timedPacket -> PacketUtils.queue(timedPacket.getPacket()));
        packets.clear();
    }

    @EventTarget
    public void onDisable() {
        packets.forEach(timedPacket -> PacketUtils.queue(timedPacket.getPacket()));
        packets.clear();
    }

    @EventTarget
    public void onPacket(PacketEvent e) {
        if (e.getState() == PacketEvent.State.OUTGOING) {
            if ((e.getPacket() instanceof C00PacketKeepAlive)) {
                packets.add(new TimedPacket(e.getPacket()));
                timer.reset();
                e.setCancelled(true);
            }
        }
    }

    @EventTarget
    public void onUpdate(UpdateEvent e) {
        // terrible way to do it, nothing else worked for some reason
        if (timer.hasTimeElapsed(ms.get())) {
            packets.forEach(timedPacket -> PacketUtils.queue(timedPacket.getPacket()));
            packets.clear();
        }
    }
}